--[[    
   Repackable Medpacks
   Author: AntGlobes
   Source: https://www.moddb.com/mods/repackable-medpacks
   Version: v1.0
   Last Modified: 10/11/23
   Purpose: Utility functions, some reused from past addons. Credited if not authored by AG
--]]

show_msg = get_config("main", "display_msg")

function contains(tbl, key)
    for k, v in pairs(tbl) do
        if k == key then
            return true, v
        end
    end
    return false
end

function index_of(tbl, value, by_key)
    for k, v in pairs(tbl) do
        if not by_key then 
            if v == value then
                return k
            end
        else
            if k == value then
                return k
            end
        end
    end
    return false
end

function sum(tbl)
    local sum = 0
    for _, val in pairs(tbl) do
        sum = sum + val
    end
    return sum
 end

 function sum_nested(tbl)
    local sum = 0
    for sect, t in pairs(tbl) do
        for k, v in pairs(t) do
            if type(t[k]) == "number" then
                sum = sum + v
            end
        end
    end
    return sum
 end

 function concat_pairs(tbl)
    local result = ""
    for key, value in pairs(tbl) do
        result = result .. key ..  ", "
    end
    
    result = result:sub(1, -3)
    return result
end

function concat(tbl)
    local result = ""
    for key, value in pairs(tbl) do
        result = result ..value..  ", "
    end
    
    result = result:sub(1, -3)
    return result
end

function obj_to_sect_list(objs)
    local sect_list = {}
    for _, obj in ipairs(objs) do
        sect_list[#sect_list + 1] = obj:section()
    end
    printf("sect list %s", table.concat(sect_list, ","))
    return sect_list
end


 function display_msg(text_string, values, medpack_type)
    if not show_msg then return end
    printf("Displaying message: %s with icon for %s", get_translation(text_string, values), medpack_type)
    news_manager.send_tip(db.actor, get_translation(text_string, values), nil, "repack_medpack_"..medpack_type, 1500)
end

--- @author NLTP_ASHES
--- Function used to know if there exists a translation for a given game string.
--- @param str string
--- @return boolean
function has_translation(str)
    return game.translate_string(str) ~= str
end

--- @author NLTP_ASHES
--- Function used to know if there exists a translation for a given game string.
--- @param str string
--- @return boolean
function get_translation(str,...)
    if not has_translation(str) then return "No translation" end

    local string = game.translate_string(str)

    if (select('#',...) >= 1) then
        local i = 0
        local p = {...}
        local function sr()
            i = i + 1
            if (type(p[i]) == "userdata") then
                return "userdata"
            end
            return tostring(p[i])
        end
        string = string.gsub(string,"%%s",sr)
    end

    return string
end

function load_settings()
    show_msg = get_config("main", "display_msg")
end

function on_first_update()
    load_settings()
end

function on_option_change()
    load_settings()
end

function on_game_load()
    RegisterScriptCallback("actor_on_first_update", on_first_update)
    RegisterScriptCallback("on_option_change", on_option_change)
end